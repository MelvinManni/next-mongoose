import { useSession, signIn, signOut } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { useCallback, useEffect, useState } from "react";
import styles from "../../styles/Home.module.css";
import phonebookStyles from "../../styles/Phonebook.module.css";

export default function Home({ contact }) {
  const { data: session } = useSession();
  const [loading, setLoading] = useState(false);
  const router = useRouter();
  const query = router.query;
  const [state, setState] = useState({
    name: "",
    mobile: "",
    fax: "",
    work: "",
  });

  const getContact = useCallback(async () => {
    if (session) {
      const res = await fetch("/api/phonebooks/" + query.id);
      const data = await res.json();
      data.contact && setState(data.contact);
    }
  }, [query.id, session]);

  useEffect(() => {
    getContact();
  }, [getContact]);

  const handleChange = (e) => {
    const { name, value } = e.target;

    setState((prev) => ({ ...prev, [name]: value }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);
    try {
      await fetch("/api/phonebooks/" + query.id, {
        method: "PATCH",
        headers: {
          Accept: "application/json",
          "Content-Type": "application/json",
        },
        body: JSON.stringify(state),
      });
    } catch (error) {
      console.log(error);
    } finally {
      setLoading(false);
      getContact()
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Next MongoDb</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {!session ? (
          <button onClick={() => signIn()} className={styles.btn}>
            Sign In
          </button>
        ) : (
          <>
            <div className={styles.linkText}>
              <Link href="/"> Go Back</Link>
            </div>
            <h4 className="text-center">Update Contact: {query.id}</h4>
            <button onClick={signOut}>Sign Out</button>

            <div className={styles.cardContainer}>
              <form onSubmit={handleSubmit} className={phonebookStyles.card}>
                <input onChange={handleChange} name="name" value={state.name || ""} type="text" placeholder="Enter contact name" />
                <input onChange={handleChange} name="mobile" value={state.mobile || ""} type="text" placeholder="Enter contact mobile no." />
                <input onChange={handleChange} name="fax" value={state.fax || ""} type="text" placeholder="Enter contact fax no." />
                <input onChange={handleChange} name="work" value={state.work || ""} type="text" placeholder="Enter contact work no." />
                <button disabled={loading} className={`${styles.btn} ${styles.centerBtn}`}>
                  {loading ? "Updating..." : "Update Contact"}
                </button>
              </form>
            </div>
          </>
        )}
      </main>
    </div>
  );
}
